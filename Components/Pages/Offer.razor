@page "/offer"
@page "/oferta"
@attribute [AllowAnonymous]
@rendermode InteractiveServer

@using Microsoft.EntityFrameworkCore
@using WlodCar.Data.Entities
@using WlodCar.Components
@using System.Globalization
@inject ApplicationDbContext Db

<PageTitle>WlodCar -- Oferta</PageTitle>

<!-- ─────────────────────────── HERO / INTRO ─────────────────────────── -->
<section class="bg-light py-5 mb-5">
    <div class="container text-center">
        <h1 class="display-4 fw-bold mb-3">
            <span class="text-wlodcar">WlodCar</span> -- pasja Pawła Włodkowica
        </h1>
        <p class="lead mx-auto" style="max-width: 720px;">
            Od <strong>1313&nbsp;r.</strong>, gdy Paweł Włodkowic wyruszył
            w pierwszą podróż dyplomatyczną, minęło wiele wieków,
            ale duch odkrywania pozostał. Dziś jego wizję wolności dróg i
            otwartości łączymy z nowoczesną flotą samochodów -- prosto z
            <abbr title="Szkoła Wyższa Pawła Włodkowica">SWPW</abbr>
            do Twoich planów.
        </p>

        <div class="row g-4 mt-4">
            <div class="col-6 col-md-3">
                <i class="bi bi-speedometer2 display-6 text-wlodcar"></i>
                <h6 class="mt-2">Pełna moc</h6>
                <small>Nowoczesne silniki i natychmiastowa dostępność.</small>
            </div>
            <div class="col-6 col-md-3">
                <i class="bi bi-shield-check display-6 text-wlodcar"></i>
                <h6 class="mt-2">Bezpieczeństwo</h6>
                <small>Regularne przeglądy i ubezpieczenie OC/AC.</small>
            </div>
            <div class="col-6 col-md-3">
                <i class="bi bi-geo-alt display-6 text-wlodcar"></i>
                <h6 class="mt-2">Wygodny odbiór</h6>
                <small>Oddziały w Płocku, Iławie i Wyszkowie.</small>
            </div>
            <div class="col-6 col-md-3">
                <i class="bi bi-currency-exchange display-6 text-wlodcar"></i>
                <h6 class="mt-2">Jasne zasady</h6>
                <small>Brak ukrytych opłat, rabaty lojalnościowe.</small>
            </div>
        </div>
    </div>
</section>

<!-- ──────────────────────────  MOZAIKA  ─────────────────────────── -->
@if (cars is null)
{
    <div class="text-center py-5">
        <span class="spinner-border spinner-border-sm me-2"></span>Ładuję…
    </div>
}
else if (!availableCars.Any())
{
    <div class="alert alert-info text-center">Brak dostępnych samochodów w tej chwili.</div>
}
else
{
    <div class="container">
        <div class="card border-0 shadow-lg overflow-hidden position-relative">
            <div class="car-mosaic @(GetMosaicClass())">
                @foreach (var car in availableCars.Take(3))
                {
                    <img src="@car.Img" alt="@car.Name" />
                }
                @* Jeśli mamy mniej niż 3 samochody, wypełnij pustym obrazkiem *@
                @for (int i = availableCars.Count(); i < 3 && i < 3; i++)
                {
                    <div class="empty-slot">
                        <i class="bi bi-car-front display-1 text-muted"></i>
                    </div>
                }
            </div>

            <div class="card-img-overlay d-flex flex-column justify-content-end p-0">
                <div class="info-box m-4 m-md-5">
                    <h2 class="text-white fw-bold mb-2">
                        @if (availableCars.Count() >= 3)
                        {
                            <text>Trzy klasy -- jedna decyzja</text>
                        }
                        else
                        {
                            <text>Nasza flota czeka na Ciebie</text>
                        }
                    </h2>
                    <p class="text-white-50 mb-4" style="max-width:420px;">
                        Miejskie <em>City</em>, rodzinne <em>Combi</em>,
                        a może coś z pazurem? Wybierz na kolejnej stronie,
                        a resztą zajmiemy się my.
                    </p>
                    <a href="/rezerwacja" class="btn btn-wlodcar btn-lg px-4">
                        Przejdź do rezerwacji
                        <i class="bi bi-arrow-right ms-1"></i>
                    </a>
                </div>
            </div>
        </div>
    </div>
}

<!-- ─────────────────────────── LISTA WSZYSTKICH SAMOCHODÓW ─────────────────────────── -->
<section class="container my-5">
    <h3 class="text-center mb-4">Cała nasza flota</h3>

    @if (cars != null && cars.Any())
    {
        <div class="row row-cols-1 row-cols-md-3 row-cols-lg-4 g-4">
            @foreach (var car in cars)
            {
                <div class="col">
                    <div class="card h-100 @(car.IsAvailable && !car.InService ? "" : "opacity-75")">
                        <img src="@car.Img" class="card-img-top" style="height: 180px; object-fit: cover;" alt="@car.Name">
                        <div class="card-body">
                            <h6 class="card-title">@car.Name</h6>
                            <p class="mb-2">
                                <strong class="text-wlodcar">@car.PricePerDay.ToString("0.00") PLN</strong>
                                <span class="text-muted small">/ doba</span>
                            </p>
                            <div class="mb-2">
                                @if (car.InService)
                                {
                                    <span class="badge bg-warning">
                                        <i class="bi bi-wrench"></i> W serwisie
                                    </span>
                                }
                                else if (!car.IsAvailable)
                                {
                                    <span class="badge bg-danger">Niedostępny</span>
                                }
                                else
                                {
                                    <span class="badge bg-success">
                                        <i class="bi bi-check-circle"></i> Dostępny
                                    </span>
                                }
                            </div>
                            @if (car.NextServiceDate.HasValue && car.NextServiceDate.Value <= DateTime.Now.AddDays(30))
                            {
                                <small class="text-muted d-block">
                                    <i class="bi bi-calendar-check"></i>
                                    Serwis: @car.NextServiceDate.Value.ToString("dd.MM.yyyy")
                                </small>
                            }
                        </div>
                    </div>
                </div>
            }
        </div>

        @if (carsInService.Any())
        {
            <div class="alert alert-info mt-4">
                <i class="bi bi-info-circle"></i>
                <strong>@carsInService.Count()</strong>
                @(carsInService.Count() == 1 ? "samochód jest" : "samochody są")
                obecnie w serwisie i wkrótce @(carsInService.Count() == 1 ? "wróci" : "wrócą") do oferty.
            </div>
        }
    }
</section>

<!-- ─────────────────────────── CSS ─────────────────────────── -->
<style>
    /* ========== kolor firmowy ========== */
    .text-wlodcar {
        color: #f36c0d !important;
    }

    .btn-wlodcar {
        background: #f36c0d;
        border-color: #f36c0d;
        color: #fff;
    }

        .btn-wlodcar:hover {
            background: #d95800;
            border-color: #d95800;
            color: #fff;
        }

    /* ========== mozaika ========== */
    .car-mosaic {
        display: grid;
        grid-template-columns: repeat(3,1fr);
        height: 360px;
    }

    .car-mosaic-small {
        grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
    }

    .car-mosaic img {
        width: 100%;
        height: 100%;
        object-fit: cover;
        filter: brightness(.75);
        transition: .4s;
    }

        .car-mosaic img:hover {
            filter: brightness(1);
            transform: scale(1.05);
        }

    .car-mosaic .empty-slot {
        width: 100%;
        height: 100%;
        background: #f8f9fa;
        display: flex;
        align-items: center;
        justify-content: center;
        filter: brightness(.75);
    }

    /* ========== overlay ========== */
    .card-img-overlay {
        display: flex;
        align-items: flex-end;
        justify-content: flex-start;
        padding: 0;
    }

    /* ========== info-box ========== */
    .info-box {
        background: rgba(0,0,0,.65);
        border-radius: 1rem;
        padding: 2rem;
        margin: 2rem;
        max-width: 460px;
        backdrop-filter: blur(3px);
    }

    /* gradient tylko na XS */
    @@media(max-width:575.98px) {
        .info-box {
            background: linear-gradient( to top, rgba(0,0,0,.8) 0%, rgba(0,0,0,.6) 30%, rgba(0,0,0,.0) 100%);
        }
    }
</style>

@code {
    private List<Car>? cars;
    private IEnumerable<Car> availableCars = Enumerable.Empty<Car>();
    private IEnumerable<Car> carsInService = Enumerable.Empty<Car>();

    protected override async Task OnInitializedAsync()
    {
        cars = await Db.Cars
                       .OrderBy(c => c.Brand)
                       .ThenBy(c => c.Model)
                       .AsNoTracking()
                       .ToListAsync();

        if (cars != null)
        {
            availableCars = cars.Where(c => c.IsAvailable && !c.InService);
            carsInService = cars.Where(c => c.InService);
        }
    }

    private string GetMosaicClass()
    {
        return availableCars.Count() < 3 ? "car-mosaic-small" : "";
    }
}